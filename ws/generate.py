import json
from itertools import product
from random import choice
from os.path import join
from pathlib import Path
from shutil import make_archive, copytree, copy, rmtree

from mako.lookup import TemplateLookup


STUDENTS = {
    "0": "Сухоплюев Илья",
    "1": "Антипин Дмитрий",
    "2": "Даровских Георгий",
    "3": "Имамутдинов Ильдар",
    "4": "Карманов Роман",
    "5": "Карташов Матвей",
    "6": "Кочнев Максим",
    "7": "Минибаев Роберт",
    "8": "Михайлов Данил",
    "9": "Мухаметянов Давлет",
    "10": "Некомкин Никита",
    "11": "Павлов Евгений",
    "12": "Рожков Илья",
    "13": "Самигуллин Амирхан",
    "14": "Скругин Даниил",
    "15": "Уасов Багжан",
    "16": "Файрузов Адель",
    "17": "Фархутдинов Радмир",
    "18": "Филиппов Дмитрий",
    "19": "Фомагин Олег",
    "20": "Хаертдинов Адель",
    "21": "Хомутов Даниил",
    "22": "Шарафутдинов Нияз",
    "23": "Шикалов Владислав",
    "24": "Крупоткин Сигурд",
}

COLORS ={
    "AliceBlue",
    "Chocolate",
    "Chartreuse",
    "Crimson",
    "DarkBlue",

    "DarkGoldenRod",
    "DarkMagenta",
    "DarkOrange",
    "DarkRed",
    "DeepPink",

    "DarkViolet",
    "DodgerBlue",
    "ForestGreen",
    "Gold",
    "GreenYellow",

    "IndianRed ",
    "LightPink",
    "Lime",
    "Maroon",
    "MidnightBlue",

    "Navy",
    "Olive",
    "Peru",
    "Plum",
    "Salmon",
}

# 2 модуль Февраля - Тетрис

DIRECTIONS = {
    "BOTTOM",
    "RIGHT",
    "UP",
    "LEFT",
}

DIRECTION_LABELS = {
    "BOTTOM": "Сверху-Вниз",
    "RIGHT": "Слева-Вправо",
    "UP": "Снизу-Вверх",
    "LEFT": "Справа-Налево",
}

NEW_FIGURE_SIDE_LABEL = {
    "BOTTOM": "Вверху",
    "RIGHT": "Слева",
    "UP": "Внизу",
    "LEFT": "Справа",
}

ARROW_LABELS = {
    "BOTTOM": {
        "MOVE-ARROWS": "Стрелки Влево-Вправо",
        "SPEEDUP-ARROW": "Вниз",
        "TRANSPOND-ARROW": "Вверх",
    },
    "RIGHT": {
        "MOVE-ARROWS": "Стрелки Вверх-Вниз",
        "SPEEDUP-ARROW": "Вправо",
        "TRANSPOND-ARROW": "Влево",
    },
    "UP": {
        "MOVE-ARROWS": "Стрелки Влево-Вправо",
        "SPEEDUP-ARROW": "Вверх",
        "TRANSPOND-ARROW": "Вниз",
    },
    "LEFT": {
        "MOVE-ARROWS": "Стрелки Вверх-Вниз",
        "SPEEDUP-ARROW": "Влево",
        "TRANSPOND-ARROW": "Вправо",
    },
}

NUMBERS_OF_KNOWN_FIGURES = list({1, 2, 3, })

FIGURES = {
    (
        (1, ),
        (1, ),
        (1, ),
        (1, ),
    ),
    (
        (1, 1),
        (1, 1),
    ),
    (
        (1, 0),
        (1, 0),
        (1, 1),
    ),
    (
        (0, 1),
        (0, 1),
        (1, 1),
    ),
    (
        (1, 0),
        (1, 1),
        (1, 0),
    ),
    (
        (1, 0),
        (1, 1),
        (0, 1),
    ),
    (
        (0, 1),
        (1, 1),
        (1, 0),
    ),
}

FIGURES_SETS = [FIGURES - {figure, } for figure in FIGURES]

SPEED = list({1, 1.5, 2, 2.5, 3})

# Источник: https://citatnica.ru/citaty/samye-luchshie-tsitaty
# Внимание!! первый попавшийся, не проверялся, но вроде выборочно ничего так
FUTURES = [
    "Если у тебя получилось обмануть человека, это не значит, что он дурак, это значит, что тебе доверяли больше, чем ты этого заслуживаешь.",
    "Запомни одну вещь, мальчик: никогда, никогда и еще раз никогда ты не окажешься смешным в глазах женщины, если сделаешь что-то ради нее.",
    "Когда мне было 5 лет, мама всегда твердила мне, что самое важное в жизни — быть счастливым. Когда я пошел в школу, меня спросили, кем я хочу стать, когда вырасту. Я написал «счастливым». Мне сказали – «ты не понял задание», а я ответил — «вы не поняли жизнь».",
    "Одиночество легче, когда не любишь.",
    "Настоящий друг — это человек, который выскажет тебе в глаза все, что о тебе думает, а всем скажет, что ты — замечательный человек.",
    "Родиться дураком не позор. А вот умереть дураком стыдно.",
    "Не всегда просит прощения тот, кто виноват. Просит прощения тот, кто дорожит отношениями.",
    "Ты когда-нибудь чувствовал, что тебе не хватает того, кого ты никогда не встречал?",
    "В падающем самолёте нет атеистов.",
    "Мужество — это когда заранее знаешь, что ты проиграл, и все-таки берешься за дело и наперекор всему на свете идешь до конца. Побеждаешь очень редко, но иногда все-таки побеждаешь.",
    "Когда человек действительно хочет чего-то, вся Вселенная вступает в сговор, чтобы помочь этому человеку осуществить свою мечту.",
    "Не тот велик, кто никогда не падал, а тот велик — кто падал и вставал!",
    "Мы в жизни любим только раз, а после ищем лишь похожих.",
    "Когда тебе тяжело, всегда напоминай себе о том, что если ты сдашься, лучше не станет.",
    "Симпатия — это когда нравится внешность, влюблённость — когда нравится внешность и характер, а любовь — это когда нравятся даже недостатки.",
    "Если хочешь узнать человека, не слушай, что о нём говорят другие, послушай, что он говорит о других.",
    "Умей ценить того кто без тебя не может, и не гонись за тем, кто счастлив без тебя!",
    "Какой бы сильной ни была женщина, она ждет мужчину сильнее себя и не для того, чтобы он ограничивал ей свободу, а для того, чтобы он дал ей право быть слабой.",
    "Танцуй так, как будто на тебя никто не смотрит.",
    "Пой, как будто тебя никто не слышит.",
    "Люби так, как будто тебя никогда не предавали, и живи так, как будто земля — это рай.",
    "Если вы хотите осчастливить весь мир, идите домой и любите свою семью.",
    "Победи себя и выиграешь тысячи битв.",
    "Если Вы стали для кого-то плохим, значит много хорошего было сделано для этого человека.",
    "Заведите себе «идиотскую» привычку радоваться неудачам. Это гораздо веселей, чем раздражаться и ныть по любому поводу.",
    "Нашедший себя теряет зависимость от чужих мнений.",
    "Прежде чем диагностировать у себя депрессию и заниженную самооценку, убедитесь, что вы не окружены идиотами.",
    "Есть три вещи, которых боится большинство людей: доверять, говорить правду и быть собой.",
    "Самый лучший и самый правильный выход из ситуации: забыть все плохое, сохранить в памяти хорошие моменты, просто сказать спасибо за все что мы пережили. И пойти дальше. Потому что все, что с нами происходит — к лучшему.",
    "Проблема в том, что, не рискуя, мы рискуем в сто раз больше.",
    "Прежде чем осуждать кого-то возьми его обувь и пройди его путь, попробуй его слезы, почувствуй его боли. Наткнись на каждый камень, о который он споткнулся. И только после этого говори, что ты знаешь- как правильно жить.",
    "Расстояние ничего не портит. Разница в возрасте ничего не портит. Мнение родителей ничего не портит. Всё портят люди. Сами.",
    "Оттого что человек умер, его нельзя перестать любить, чёрт побери, особенно если он был лучше всех живых, понимаешь?",
    "Мысленно сменить зиму на весну и влюбиться.",
    "Ты любишь всех, а любить всех — значит не любить никого.Тебе все одинаково безразличны.",
    "Я сделал предложение своей жене на третий день знакомства, и всю жизнь жалел лишь о двух потерянных днях…",
    "Поколения работают на работах, которые ненавидят, чтобы покупать вещи, которые им не нужны ",
    "Ищу повода поплакаться, но не нахожу. Что само по себе уже повод.",
    "Раньше меня презирали за невежество и тупость, теперь ненавидят за ум и знания. Господи, да чего же им нужно от меня?",
    "Можно закрыть глаза на то, что видишь. Но нельзя закрыть сердце на то, что ты чувствуешь. Фридрих Ницше",
    "Когда знаешь, о чем поговорить с человеком, это — признак взаимной симпатии. Когда вам есть о чем вместе помолчать, это — начало настоящей дружбы. Макс Фрай",
    "Я не хочу достичь момента, когда я почувствую себя удовлетворенным. Я думаю, что если это случится, то со мной все будет кончено.",
    "Только потеряв все, мы становимся свободными, чтобы сделать все что угодно.",
    "Все люди, посланные нам -это наше отражение. И посланы они для того, чтобы мы, смотря на этих людей, исправляли свои ошибки, и когда мы их исправляем, эти люди либо тоже меняются, либо уходят из нашей жизни.",
    "Думай о смысле, а слова придут сами.",
    "Я решила, что вообще ничего не буду ждать. Ничего и никого. Мне и так хорошо. Без всех. Просто жить. Просто для себя. Просто в свое удовольствие. То, что суждено, придет само.",
    "Честно говоря, мне не нужен тот, кто видит во мне только хорошее, мне нужен тот, кто видит во мне и плохое, но при этом все еще хочет быть со мной.",
    "Никогда не слушайте осуждений в свой адрес. Ибо, даже если бы вы умели ходить по воде, то будьте уверены, кто-нибудь обязательно скажет: «Смотрите, он даже не умеет плавать»",
    "Когда долго смотришь на море, начинаешь скучать по людям, а когда долго смотришь на людей – по морю.",
    "Вместо того, чтобы стирать слезы с лица, сотрите из жизни людей, которые заставили вас плакать.",
    "Трусливый друг страшнее врага, ибо врага опасаешься, а на друга надеешься.",
    "Если вы уходите и вас никто не зовёт обратно – вы идете в верном направлении.",
    "Но конец лжи ещё не означает начала правды.",
    "Невозможно – это всего лишь громкое слово, за которым прячутся маленькие люди.",
    "Я пишу не для того, чтобы просить тебя прийти, я пишу, чтобы предупредить: я всегда буду ждать.",
    "Боишься — не делай, делаешь — не бойся, а сделал — не сожалей.",
    "Кому-то не хватает одной женщины, и он переключается на пятую, десятую. А другому не хватает жизни, чтобы любить одну-единственную.",
    "Влюбиться можно в красоту, но полюбить – лишь только душу!",
    "Я по натуре оптимист. Все будет хорошо, а дату лучше не уточнять.",
    "Не бойтесь врагов, бойтесь друзей. Предают друзья, а не враги.",
    "Хорошие друзья, хорошие книги и спящая совесть – вот идеальная жизнь.",
    "В жизни нет ничего сложного. Это мы сложны. Жизнь – простая штука, и в ней чем проще, тем правильнее.",
    "У каждого человека свои звезды. Одним — тем, кто странствует, они указывают путь. Для других это просто огоньки.",
    "Я до сих пор так и не понял, зачем люди подолгу сердятся друг на друга. Жизнь и так непростительно коротка. Наберитесь смелости и напишите, позвоните, встретьтесь, пока не стало поздно.",
    "Они научили меня ценить верность… И никогда не забывать о тех, кого любишь.",
    "Нельзя вернуться в прошлое и изменить свой старт, но можно стартовать сейчас и изменить свой финиш.",
    "Общество часто прощает преступника. Но не мечтателя.",
    "Eсли ты любишь человека таким, какой он есть, то ты любишь его. Eсли ты пытаешься его кардинально менять, то ты любишь себя. Вот и всё.",
    "Мы не хозяева собственной жизни. Мы связаны с другими прошлым и настоящим. И каждый проступок, как и каждое доброе дело, рождают новое будущее.",
    "Мечтай так, как будто будешь жить вечно. Живи так, как будто завтра умрешь.",
    "Есть такие слёзы, которые надо выплакать обязательно, в любое время дня и ночи, выплакать, чтобы всё внутри перегорело.",
    "Безнадёжно — это когда на крышку гроба падает земля. Остальное можно исправить.",
    "Умереть за любовь не сложно. Сложно найти любовь, за которую стоит умереть.",
    "Не существует добрых, плохих, хороших.",
    "Это как-то очень по-русски — поставить себя в затруднительное положение, а потом из него выбираться.",
    "Если что то у тебя болит, молчи ! Иначе ударят именно туда.",
    "Никогда не отказывайся от того, что заставляет тебя улыбаться.",
    "Думающий атеист, живущий по совести, сам не понимает насколько он близок к Богу. Потому что творит добро, не ожидая награды, в отличие от верующих лицемеров.",
    "Недоверие к друзьям — вершина бесчестья.",
    "Где бы ни был каждый из нас, мы всегда будем видеть одну луну.",
    "Уметь выносить одиночество и получать от него удовольствие — великий дар.",
    "Одиночество дарит Нам возможность еще на один шаг приблизиться к Богу.",
    "Умереть за любовь не сложно. Сложно найти любовь, за которую стоит умереть.",
    "Человека делают счастливым три вещи: любовь, интересная работа и возможность путешествовать.",
    "Если вы хотите иметь то, что никогда не имели, вам придётся делать то, что никогда не делали.",
    "Нет ничего лучше, чем возвращаться туда, где ничего не изменилось, чтобы понять, как изменился ты сам.",
    "Самое худшее, когда нужно ждать и не можешь ничего сделать. От этого можно сойти с ума.",
    "Когда в крепкую семью вдруг приходит беда, там не говорят: «Это из- за тебя….», – там говорят: «Я с тобой!». И это главные слова в семейной жизни.",
    "Если вы ничего плохого не делаете, то лишь потому, что вам не представилось возможности.",
    "Кто не понимает вашего молчания, едва ли поймет ваши слова.",
    "Никогда не отказывайся от того, что заставляет тебя улыбаться.",
    "В этом мире я ценю только верность. Без этого ты никто и у тебя нет никого. В жизни это единственная валюта, которая никогда не обесценится.",
    "Что это за чисто человеческая привычка — мстить за себя всему миру? Ведь люди — не гидра, у которой головы разные, а суть одна.",
    "Будьте с теми людьми, которые заставляют вас улыбаться даже в самые плохие времена.",
    "Я хотел было в кои-то веки поступить честно: отрицательно помотать головой, завизжать и выскочить на улицу, пробив головой оконное стекло. Но вместо этого молча кивнул. Всё как всегда.",
    "Встреча двух личностей подобна контакту двух химических веществ: если есть хоть малейшая реакция, изменяются оба элемента",
    "А кто говорил, что будет легко? Всякие отношения — это сложно! Но если вы хотите быть рядом даже тогда, когда всё плохо — значит это по-настоящему!",
    "Надо уметь закрывать скучную книгу, уходить с плохого кино и расставаться с людьми, которые не дорожат тобой.",
    "Хорошее воспитание — это умение скрывать, как много мы думаем о себе и как мало о других.",
    "Люди — странные существа: гадости делают друг другу, а прощения просят у Бога. У многих на шее крестик, а в душе… нолик!",
    "Уметь выносить одиночество и получать от него удовольствие — великий дар.",
    "Умные не столько ищут одиночества, сколько избегают создаваемой дураками суеты.",
    "Денег, которые я заработал, хватит мне до конца жизни, если я умру сегодня в 16.00.",
    "Человек имеет два мотива поведения — один настоящий и второй, который красиво звучит.",
    "Дети должны быть очень снисходительными к взрослым.",
    "Бог обращается к человеку шепотом Любви, а если он не услышан — то голосом Совести. Если человек не слышит голоса совести — то Бог обращается через рупор страданий.",
    "Мода проходит, стиль остаётся.",
    "Успех — это умение двигаться от одной неудачи к другой не теряя энтузиазма.",
    "Мне кажется, из детства я выехал, а вот до пункта назначения — «взрослости» — не добрался. Так и живу в автобусе.",
    "Никогда столько не лгут, как во время войны, после охоты и до выборов.",
    "Каждому человеку нужно какое-нибудь хобби — якобы с целью «выйти из стресса», — но ты-то прекрасно понимаешь, что на самом деле люди попросту пытаются выжить и не сойти с ума.",
    "Лучше идти к цели со скоростью черепахи, чем со скоростью света придумывать оправдания почему Ты стоишь на месте.",
    "Я отдала тебе своё сердце, больше мне нечего тебе дать, если этого тебе мало – значит, тебе нужна другая.",
    "Самая большая ошибка в том, что мы быстро сдаёмся. Иногда, чтобы получить желаемое, надо просто попробовать ещё один раз.",
    "Ничто так не выдает человека, как то, над чем он смеётся.",
    "Попробуйте изменить себя, и вы поймете, насколько ничтожны ваши шансы изменить других.",
    "И не могу сказать, что не могу жить без тебя — поскольку я живу.",
    "Слишком много людей тратят деньги, которых они не заработали, на вещи, которые им не нужны, только для того, чтобы впечатлить людей, которые им не нравятся.",
    "Сильный мужчина не нуждается в том, чтобы самоутверждаться за счёт женщины, имевшей слабость его полюбить. Ему и без того есть где проявить свою силу.",
    "Если у народа нет голоса, это заметно даже при пении гимна.",
    "Влюбиться можно в красоту, но полюбить – лишь только душу!",
    "Волшебство — это вера в себя. И когда тебе это удается, то удается и все остальное.",
    "Обязательно дружите с теми, кто лучше вас. Будете мучиться, но расти.",
    "Вчера я был умным, хотел изменить мир. Сегодня я мудрый, и поэтому меняю себя.",
    "Безвыходным мы называем положение, выход из которого нам не нравится.",
    "Великие души переносят страдания молча.",
    "Машина времени есть у каждого из нас: то, что переносит в прошлое — воспоминания; то, что уносит в будущее — мечты.",
    "Человек сам строит вокруг себя жёсткий забор из этих самых «нельзя», «не могу», «не положено». А потом выглядывает из-за этого забора и завидует тем, кто живёт на свободе.",
    "Зачем тебе пистолет? Дави их интеллектом!",
    "Сильный не тот, кто может положить на лопатки одним взглядом, а тот, кто одной улыбкой способен поднять с колен!",
    "Самый хороший способ испортить отношения — это начать выяснять их.",
    "Ошибки — это знаки препинания жизни, без которых, как и в тексте, не будет смысла.",
    "У самого злого человека расцветает лицо, когда ему говорят, что его любят. Стало быть, в этом счастье…",
    "Если тебе не нравится то, что ты получаешь, измени то, что ты даёшь.",
    "Иногда момент, который ты так долго ждал, приходит в самое неподходящее время…",
    "Почти каждая история успеха, которая мне известна, начиналась с того, что человек лежал навзничь, поверженный неудачами.",
    "Человек ревнив не тогда, когда любит, а когда хочет быть любимым.",
    "Мужчина способный на поступки, обречен быть любимым!",
    "Чем больше ты доверился человеку, тем больший у него соблазн тебя предать.",
    "Ваш мозг может все. Абсолютно все. Главное, убедить себя в этом. Руки не знают, что они не умеют отжиматься, ноги не знают, что они слабые, живот не знает что он сплошной жир. Это знает ваш мозг. Убедив себя в том, что вы можете все, вы сможете действительно все.",
    "Ведь если говорить по правде, то больше всего в жизни я хочу кого-нибудь любить.",
    "Человек — это продукт своих собственных мыслей. О чем он думает, тем он и становится.",
    "Каждый живет, как хочет, и расплачивается за это сам.",
    "Ни в коем случае нельзя отчитывать тех, кто старался изо всех сил, но совершил ошибку.",
    "Не совершай классическую ошибку всех умников: не думай, что нет людей умнее тебя.",
    "Есть возраст, когда женщина должна быть красивой, чтобы быть любимой,",
    "А потом приходит время быть любимой для того, чтобы быть красивой.",
    "Нужно иметь что-то общее, чтобы понимать друг друга, и чем-то отличаться, чтобы любить друг друга.",
    "Проблема этого мира в том, что глупцы слишком уверены в себе, а умные люди полны сомнений.",
]


def generate_module_1_options():
    for i in STUDENTS:
        yield {
            "std_num": i,
            "student_name": STUDENTS[i],
            "color": choice(COLORS),
            "future1": choice(FUTURES),
            "future2": choice(FUTURES),
            "future3": choice(FUTURES),
        }


def generate_module_1_task(option: dict, output_dir: str, std_num: int):
    lookup = TemplateLookup(directories=["."])

    std_output_dir = join(output_dir, f"std{std_num}")
    Path(std_output_dir).mkdir(exist_ok=True, parents=True)

    with open(join(std_output_dir, "task.md"), "w", encoding="utf8") as f:
        template = lookup.get_template('feb_m1_task.md')
        f.write(template.render(**option))

    for file_suffix in ["index.html", "login.html", "myvideo.html", "registration.html", "upload.html", "video.html"]:
        with open(join(std_output_dir, file_suffix), "w", encoding="utf8") as f:
            template = lookup.get_template(f'feb_m1_{file_suffix}')
            f.write(template.render(**option))

    with open(join(std_output_dir, "options.json"), "w", encoding="utf8") as f:
        json.dump(dict(**option),
                  f,
                  indent=4)


def generate_module_2_options():
    for (std_num, (direction, figures_set)) in enumerate(list(product(DIRECTIONS, FIGURES_SETS))):
        yield {
            'direction': direction,
            'figures_set': list(figures_set),
            'numbers_of_known_figures': choice(NUMBERS_OF_KNOWN_FIGURES),
            'speed': choice(SPEED),
            "direction_label": DIRECTION_LABELS[direction],
            "arrow_labels": ARROW_LABELS[direction],
            "new_figure_side_label": NEW_FIGURE_SIDE_LABEL[direction],
            "std_num": std_num,
            "student_name": STUDENTS.get(str(std_num), f"std{std_num}"),
            "color": choice(COLORS),
        }


def generate_module_2_task(option: dict, output_dir: str, std_num: int):
    lookup = TemplateLookup(directories=["."])

    std_output_dir = join(output_dir, f"std{std_num}")
    Path(std_output_dir).mkdir(exist_ok=True, parents=True)

    with open(join(std_output_dir, "task.md"), "w", encoding="utf8") as f:
        template = lookup.get_template('feb_m2_task.md')
        f.write(template.render(**option))

    for file_suffix in ["index.html", "game.html", "results.html"]:
        with open(join(std_output_dir, file_suffix), "w", encoding="utf8") as f:
            template = lookup.get_template(f'feb_m2_{file_suffix}')
            f.write(template.render(**option))

    with open(join(std_output_dir, "figures.json"), "w", encoding="utf8") as f:
        json.dump(list(option["figures_set"]),
                  f,
                  indent=4)

    with open(join(std_output_dir, "options.json"), "w", encoding="utf8") as f:
        json.dump(dict(**option),
                  f,
                  indent=4)


def choice_set(s:set):
    return choice(list(s))


def generate_task(option, path, files):
    lookup = TemplateLookup(directories=["."])
    for template_file in files:
        with open(join(path, template_file[4:]), "w", encoding="utf8") as f:
            template = lookup.get_template(template_file)
            f.write(template.render(**option))


def generate_march_options():
    for i in STUDENTS:
        color_1 = choice_set(COLORS)
        color_2 = choice_set(COLORS - {color_1})
        color_3 = choice_set(COLORS - {color_1, color_2})
        yield {
            "std_num": i,
            "student_name": STUDENTS[i],
            "domain": f"std{i}.gramend.ru",
            "color_1": color_1,
            "color_2": color_2,
            "color_3": color_3,
            "m1_charnum": choice([100, 120, 140, 160, 180, 200]),
            "m1_register_path": choice(["/register/", "/signup/", "/user/new/"]),
            "m1_auth_path": choice(["/login/", "/signin/", "/user/login/"]),
            "m1_create_path": choice(["/new/", "/bug/add/", "/bug/new/"]),
            "m1_show_path": "/bug/{id}/",
        }


def generate_march_task(option, output_dir):
    std_output_dir = join(output_dir, f"std{option['std_num']}")

    Path(std_output_dir).mkdir(exist_ok=True, parents=True)

    json_filepath = join(std_output_dir, "options.json")
    with open(json_filepath, "w", encoding="utf8") as f:
        json.dump(dict(**option),
                  f,
                  indent=4)

    # Module 1
    m1_output_dir = join(std_output_dir, f"module1")
    Path(m1_output_dir).mkdir(exist_ok=True, parents=True)
    generate_task(option, m1_output_dir, [
        "mar_task_1.md",
        "mar_index.html",
        "mar_login.html",
        "mar_registration.html",
        "mar_new.html",
        "mar_bug.html",
    ])

    # Module 2
    m2_output_dir = join(std_output_dir, f"module2")
    Path(m2_output_dir).mkdir(exist_ok=True, parents=True)
    generate_task(option, m2_output_dir, [
        "mar_task_2.md",
        "mar2index.html",
        "mar2game.html",
        "mar2results.html",
    ])

    maps_path = join(m2_output_dir, "maps")
    rmtree(maps_path, ignore_errors=True)
    copytree("mar_maps", maps_path)
    copy("mar_maps.json", join(m2_output_dir, "maps.json"))
    make_archive(
        join(output_dir, f"std{option['std_num']}"),
        'zip',
        std_output_dir,
    )

if __name__ == "__main__":
    # output_dir = join("feb", "module1")
    # for (i, option) in enumerate(generate_module_1_options()):
    #     generate_module_1_task(option, output_dir, i)

    # output_dir = join("feb", "module2")
    # for (i, option) in enumerate(generate_module_2_options()):
    #     generate_module_2_task(option, output_dir, i)

    output_dir = "march"
    for option in generate_march_options():
        generate_march_task(option, output_dir)
